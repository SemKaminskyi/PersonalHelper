Index: app/src/main/java/com/gmail/kaminskysem/PersnalHelper/Timer/Service/TimerService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.gmail.kaminskysem.PersnalHelper.Timer.Service;\r\n\r\nimport android.annotation.SuppressLint;\r\nimport android.app.Service;\r\nimport android.content.Intent;\r\nimport android.media.MediaPlayer;\r\nimport android.os.Binder;\r\nimport android.os.CountDownTimer;\r\nimport android.os.IBinder;\r\nimport android.util.Log;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.Nullable;\r\n\r\nimport com.gmail.kaminskysem.PersnalHelper.Notifications.TimerNotificationsManager;\r\nimport com.gmail.kaminskysem.PersnalHelper.R;\r\nimport com.gmail.kaminskysem.PersnalHelper.Timer.TimerTImerFragment;\r\n\r\npublic class TimerService extends Service {\r\n    private final static String LOG_TAG = TimerService.class.getSimpleName();\r\n\r\n    public static final String ACTION_START_TIMER = \"start_timer\";\r\n    public static final String ACTION_STOP_TIMER = \"stop_timer\";\r\n\r\n    private static CountDownTimer countDownTimerWork;\r\n    private static CountDownTimer countDownTimeRest;\r\n\r\n\r\n\r\n    private int timeWorkInt;\r\n    private String timeWorkString = \"\";\r\n\r\n    private int timeRestInt;\r\n    private String timeRestString = \"\";\r\n\r\n    public MyBinder binder = new MyBinder();\r\n\r\n\r\n\r\n\r\n    public TimerService() {\r\n    }\r\n\r\n    public class MyBinder extends Binder {\r\n        public TimerService getService() {\r\n            return TimerService.this;\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onCreate() {\r\n        super.onCreate();\r\n        //add notifications channels - maybe need move to TimerFragment or TimerActivity\r\n        TimerNotificationsManager.setupNotificationsChannels(this);\r\n\r\n\r\n        Log.d(LOG_TAG, \"onCreateTimerService\");\r\n    }\r\n\r\n\r\n    @Override\r\n    public int onStartCommand(Intent intent, int flags, int startId) {\r\n        Toast.makeText(this, \" Timer service starting\", Toast.LENGTH_SHORT).show();\r\n        String timerWork = intent.getStringExtra(TimerTImerFragment.TIMER_WORK);\r\n        String timerRest = intent.getStringExtra(TimerTImerFragment.TIMER_REST);\r\n        Log.d(LOG_TAG, \"time  Work: \" + timerWork);\r\n        Log.d(LOG_TAG, \"time  rest: \" + timerRest);\r\n        Log.d(LOG_TAG, \"time  action: \" + intent.getAction());\r\n        String action = intent.getAction();\r\n\r\n\r\n\r\n        mediaPlayer = MediaPlayer.create(this, R.raw.timer_din);\r\n\r\n\r\n\r\n        if (ACTION_START_TIMER.equals(action)) {\r\n            // cancel previous timers\r\n            cancelTimers();\r\n            // might need to add null checks here\r\n            assert timerWork != null;\r\n            int convertToMinutes = 60000;\r\n            long workMillis = Long.parseLong(timerWork) * convertToMinutes;\r\n            assert timerRest != null;\r\n            long restMillis = Integer.parseInt(timerRest) * convertToMinutes;\r\n            runWork(workMillis, restMillis);\r\n\r\n            // start notifications\r\n            TimerNotificationsManager.showTimerNotifications(this, timerWork);\r\n            startForeground(\r\n                    Integer.parseInt(TimerNotificationsManager.getIdTimerServiceNotification())\r\n                    , TimerNotificationsManager.getNotification());\r\n            Log.d(LOG_TAG, \"Start foreground: \");\r\n            return START_STICKY;\r\n        }\r\n\r\n        if (ACTION_STOP_TIMER.equals(action)) {\r\n            cancelByUser();\r\n            Toast.makeText(this, \" Timer service stopped\", Toast.LENGTH_SHORT).show();\r\n\r\n            return START_STICKY;\r\n        }\r\n\r\n        // unknown intent - throw exception this service should get only start and stop actions\r\n        throw new IllegalArgumentException(\"Unknown action was passed to the service: \" + action);\r\n    }\r\n\r\n\r\n    @Nullable\r\n    @Override\r\n    public IBinder onBind(Intent intent) {\r\n\r\n        Log.d(LOG_TAG, \"timerBinder onBind\");\r\n        return binder;\r\n    }\r\n\r\n    private String formatTime ( Integer seconds){\r\n        @SuppressLint(\"DefaultLocale\")\r\n        String b = String.format(\"%d:%02d:%02d\", seconds / 3600,\r\n                (seconds % 3600) / 60, (seconds % 60));\r\n        return b;\r\n    }\r\n\r\n    private void runWork(long workMillis, long restMillis) {\r\n\r\n        // cancel any previous timers\r\n        cancelTimers();\r\n        countDownTimerWork = new CountDownTimer(workMillis, 1000) {\r\n            @SuppressLint(\"SetTextI18n\")\r\n            @Override\r\n            public void onTick(long millisUntilFinished) {\r\n\r\n\r\n                timeWorkInt = (int) (millisUntilFinished / 1000);\r\n\r\n\r\n\r\n                timeWorkString = \"time of  Work: \" + formatTime(timeWorkInt);\r\n//                Log.d(LOG_TAG, \" on Tick work\" + timeWorkInt);\r\n\r\n//                Log.d(LOG_TAG, \" on work String \" + timeWorkString);\r\n                TimerNotificationsManager.showTimerNotifications(getBaseContext(), getTimeWorkString());\r\n//                Log.d(LOG_TAG, \" on Tick work String to notifications \" + timeWorkString);\r\n\r\n                Intent intent = new Intent(TimerTImerFragment.BROADCAST_ACTION);\r\n                intent.putExtra(TimerTImerFragment.TIMER_WORK,timeWorkString);\r\n                sendBroadcast(intent);\r\n                Log.d(LOG_TAG, \" intent to Broadcast : \" +timeWorkString );\r\n\r\n            }\r\n\r\n            @SuppressLint(\"SetTextI18n\")\r\n            @Override\r\n            public void onFinish() {\r\n\r\n                Log.d(LOG_TAG, \" finishedWork on timer: \" + this);\r\n                mediaPlayer.start();\r\n                runRest(workMillis, restMillis);\r\n\r\n\r\n            }\r\n        }.start();\r\n    }\r\n\r\n    private void runRest(long workMillis, long restMillis) {\r\n        countDownTimeRest = new CountDownTimer(restMillis, 1000) {\r\n            @SuppressLint(\"SetTextI18n\")\r\n            @Override\r\n            public void onTick(long millisUntilFinished) {\r\n\r\n                timeRestInt = (int) (millisUntilFinished / 1000);\r\n\r\n                timeRestString = \"time of Rest: \" + formatTime(timeRestInt);\r\n\r\n                Log.d(LOG_TAG, \" on TickRest\" + timeRestInt);\r\n                Log.d(LOG_TAG, \" on Tick rest String to notifications \" + timeRestString);\r\n                TimerNotificationsManager.showTimerNotifications(getBaseContext(), timeRestString);\r\n\r\n                Intent intent = new Intent(TimerTImerFragment.BROADCAST_ACTION);\r\n                intent.putExtra(TimerTImerFragment.TIMER_WORK,timeRestString);\r\n                sendBroadcast(intent);\r\n                Log.d(LOG_TAG, \" intent to Broadcast \" +timeRestString );\r\n            }\r\n\r\n\r\n            @SuppressLint(\"SetTextI18n\")\r\n            @Override\r\n            public void onFinish() {\r\n                Log.d(LOG_TAG, \" finished Rest on timer: \" + this);\r\n                mediaPlayer.start();\r\n                runWork(workMillis, restMillis);\r\n            }\r\n\r\n        }.start();\r\n    }\r\n\r\n    @Override\r\n    public void onRebind(Intent intent) {\r\n        super.onRebind(intent);\r\n        Log.d(LOG_TAG, \"MyService onRebind\");\r\n    }\r\n\r\n    public void cancelByUser() {\r\n        cancelTimers();\r\n        mediaPlayer.stop();\r\n        mediaPlayer.reset();\r\n        mediaPlayer.release();\r\n        // add to Timer text view diff text\r\n        Intent intent = new Intent(TimerTImerFragment.BROADCAST_ACTION);\r\n        String timerStopped = \"Timer Stopped\";\r\n        intent.putExtra(TimerTImerFragment.TIMER_WORK, timerStopped);\r\n        sendBroadcast(intent);\r\n        //TODO qewstions - I need use bouth method stop service ore only one?\r\n        stopSelf();\r\n        stopForeground(true);\r\n    }\r\n\r\n    private void cancelTimers() {\r\n        if (countDownTimerWork != null) {\r\n            countDownTimerWork.cancel();\r\n        }\r\n        if (countDownTimeRest != null) {\r\n            countDownTimeRest.cancel();\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onDestroy() {\r\n        super.onDestroy();\r\n        // important - not call cancelByUser here - it will stop service and android will not restart it\r\n        cancelTimers();\r\n    }\r\n    public int getTimeWorkInt() {\r\n        return timeWorkInt;\r\n    }\r\n\r\n    public int getTimeRestInt() {\r\n        return timeRestInt;\r\n    }\r\n\r\n    public String getTimeRestString() {\r\n        return timeRestString;\r\n    }\r\n\r\n    private MediaPlayer mediaPlayer;\r\n\r\n\r\n    public String getTimeWorkString() {\r\n        return timeWorkString;\r\n    }\r\n\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/gmail/kaminskysem/PersnalHelper/Timer/Service/TimerService.java	(revision 882ac4c87be5f612d3758d8cd6cf435da6d9b8be)
+++ app/src/main/java/com/gmail/kaminskysem/PersnalHelper/Timer/Service/TimerService.java	(date 1609156169918)
@@ -67,7 +67,7 @@
         Log.d(LOG_TAG, "time  rest: " + timerRest);
         Log.d(LOG_TAG, "time  action: " + intent.getAction());
         String action = intent.getAction();
-
+ 
 
 
         mediaPlayer = MediaPlayer.create(this, R.raw.timer_din);
Index: .idea/compiler.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"CompilerConfiguration\">\r\n    <bytecodeTargetLevel target=\"1.8\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/compiler.xml	(revision 882ac4c87be5f612d3758d8cd6cf435da6d9b8be)
+++ .idea/compiler.xml	(date 1609102484815)
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="CompilerConfiguration">
-    <bytecodeTargetLevel target="1.8" />
+    <bytecodeTargetLevel target="11" />
   </component>
 </project>
\ No newline at end of file
Index: .idea/gradle.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"GradleMigrationSettings\" migrationVersion=\"1\" />\r\n  <component name=\"GradleSettings\">\r\n    <option name=\"linkedExternalProjectsSettings\">\r\n      <GradleProjectSettings>\r\n        <option name=\"testRunner\" value=\"PLATFORM\" />\r\n        <option name=\"distributionType\" value=\"DEFAULT_WRAPPED\" />\r\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\r\n        <option name=\"gradleJvm\" value=\"1.8\" />\r\n        <option name=\"modules\">\r\n          <set>\r\n            <option value=\"$PROJECT_DIR$\" />\r\n            <option value=\"$PROJECT_DIR$/app\" />\r\n          </set>\r\n        </option>\r\n        <option name=\"resolveModulePerSourceSet\" value=\"false\" />\r\n        <option name=\"useQualifiedModuleNames\" value=\"true\" />\r\n      </GradleProjectSettings>\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/gradle.xml	(revision 882ac4c87be5f612d3758d8cd6cf435da6d9b8be)
+++ .idea/gradle.xml	(date 1609102302659)
@@ -4,7 +4,7 @@
   <component name="GradleSettings">
     <option name="linkedExternalProjectsSettings">
       <GradleProjectSettings>
-        <option name="testRunner" value="PLATFORM" />
+        <option name="testRunner" value="GRADLE" />
         <option name="distributionType" value="DEFAULT_WRAPPED" />
         <option name="externalProjectPath" value="$PROJECT_DIR$" />
         <option name="gradleJvm" value="1.8" />
@@ -15,7 +15,6 @@
           </set>
         </option>
         <option name="resolveModulePerSourceSet" value="false" />
-        <option name="useQualifiedModuleNames" value="true" />
       </GradleProjectSettings>
     </option>
   </component>
Index: app/src/main/res/values/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><resources>\r\n    <string name=\"app_name\">1.2PersonaHelper</string>\r\n    <string name=\"clock_icon_name\">таймер</string>\r\n    <string name=\"button\" />\r\n    <string name=\"todo\">TODO</string>\r\n    <string name=\"planer_new_task\">new task</string>\r\n    <string name=\"planer_ic_name\">ПЛАНЕР</string>\r\n    <string name=\"start\">start</string>\r\n    <string name=\"timer_time_to_work\"> work (min)</string>\r\n    <string name=\"timer_time_to_rest\"> rest (min)</string>\r\n    <string name=\"time\">Time</string>\r\n    <string name=\"stop\">Stop</string>\r\n    <string name=\"default_notification_channel_id\">task</string>\r\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/strings.xml	(revision 882ac4c87be5f612d3758d8cd6cf435da6d9b8be)
+++ app/src/main/res/values/strings.xml	(date 1607518912000)
@@ -1,5 +1,5 @@
 <resources>
-    <string name="app_name">1.2PersonaHelper</string>
+    <string name="app_name">PersonaHelper</string>
     <string name="clock_icon_name">таймер</string>
     <string name="button" />
     <string name="todo">TODO</string>
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_1_8\" default=\"true\" project-jdk-name=\"1.8\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\r\n  </component>\r\n  <component name=\"ProjectType\">\r\n    <option name=\"id\" value=\"Android\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/misc.xml	(revision 882ac4c87be5f612d3758d8cd6cf435da6d9b8be)
+++ .idea/misc.xml	(date 1609102484800)
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_8" default="true" project-jdk-name="1.8" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_11" default="false" project-jdk-name="1.8" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/build/classes" />
   </component>
   <component name="ProjectType">
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>apply plugin: 'com.android.application'\r\napply plugin: 'com.google.gms.google-services'\r\napply plugin: 'com.google.firebase.crashlytics'\r\n\r\nandroid {\r\n    signingConfigs {\r\n        app {\r\n        }\r\n    }\r\n    compileSdkVersion 30\r\n    buildToolsVersion \"29.0.3\"\r\n\r\n    defaultConfig {\r\n        applicationId \"com.gmail.kaminskysem.PersnalHelper\"\r\n        minSdkVersion 23\r\n        targetSdkVersion 30\r\n        versionCode 1\r\n        versionName \"1.0\"\r\n\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n\r\n        javaCompileOptions {\r\n            annotationProcessorOptions {\r\n                arguments = [\"room.schemaLocation\": \"$projectDir/schemas\".toString()]\r\n            }\r\n        }\r\n        compileOptions {\r\n            // Flag to enable support for the new language APIs\r\n            coreLibraryDesugaringEnabled true\r\n\r\n            sourceCompatibility JavaVersion.VERSION_1_8\r\n            targetCompatibility JavaVersion.VERSION_1_8\r\n\r\n        }\r\n        // Required when setting minSdkVersion to 20 or lower\r\n        multiDexEnabled true\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n            buildConfigField \"boolean\", \"USE_LOG\", \"false\"\r\n        }\r\n        debug {\r\n            buildConfigField \"boolean\", \"USE_LOG\", \"true\"\r\n        }\r\n    }\r\n    task getDependencies(type: Copy) {\r\n        //referring to the 'compile' configuration\r\n        from configurations.compile, configurations.testCompile\r\n        into 'D:/0job/programming/AndroidStudioProject/.gradle'\r\n        build.dependsOn\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility JavaVersion.VERSION_1_8\r\n        targetCompatibility JavaVersion.VERSION_1_8\r\n    }\r\n    dependenciesInfo {\r\n        includeInApk false\r\n        includeInBundle false\r\n    }\r\n}\r\n\r\n\r\n    dependencies {\r\n\r\n        implementation fileTree(dir: \"libs\", include: [\"*.jar\"])\r\n        implementation 'androidx.appcompat:appcompat:1.2.0'\r\n        implementation 'androidx.constraintlayout:constraintlayout:2.0.4'\r\n        implementation 'androidx.cardview:cardview:1.0.0'\r\n        implementation 'com.google.android.material:material:1.2.1'\r\n        implementation 'androidx.recyclerview:recyclerview:1.1.0'\r\n        testImplementation 'junit:junit:4.12'\r\n        androidTestImplementation 'androidx.test.ext:junit:1.1.2'\r\n        androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'\r\n\r\n        coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.1'\r\n\r\n        // ROOM\r\n        implementation 'androidx.room:room-runtime:2.2.5'\r\n        annotationProcessor 'androidx.room:room-compiler:2.2.5'\r\n\r\n        //Dagger2\r\n        implementation 'com.google.dagger:dagger:2.27'\r\n        annotationProcessor 'com.google.dagger:dagger-compiler:2.27'\r\n\r\n        //Firebase\r\n        implementation 'com.google.firebase:firebase-analytics:18.0.0'\r\n        implementation 'com.google.firebase:firebase-messaging:21.0.0'\r\n        implementation 'com.google.firebase:firebase-crashlytics:17.3.0'\r\n\r\n        //tik tok widget\r\n        implementation 'com.bcgdv.asia.lib:ticktock:1.3'\r\n\r\n    }\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/build.gradle	(revision 882ac4c87be5f612d3758d8cd6cf435da6d9b8be)
+++ app/build.gradle	(date 1609102786577)
@@ -5,6 +5,10 @@
 android {
     signingConfigs {
         app {
+        storeFile file('D:\\0job\\programming\\PHkey.jks')
+            storePassword 'Petr.03.06.92.Kam'
+            keyAlias 'Petr.03.06.92.Kam'
+            keyPassword 'Petr.03.06.92.Kam'
         }
     }
     compileSdkVersion 30
@@ -41,6 +45,7 @@
             minifyEnabled false
             proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
             buildConfigField "boolean", "USE_LOG", "false"
+            signingConfig signingConfigs.app
         }
         debug {
             buildConfigField "boolean", "USE_LOG", "true"
@@ -48,7 +53,7 @@
     }
     task getDependencies(type: Copy) {
         //referring to the 'compile' configuration
-        from configurations.compile, configurations.testCompile
+//        from configurations.compile, configurations.testCompile
         into 'D:/0job/programming/AndroidStudioProject/.gradle'
         build.dependsOn
     }
Index: gradle/wrapper/gradle-wrapper.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#Fri Nov 20 17:55:17 EET 2020\r\ndistributionBase=GRADLE_USER_HOME\r\ndistributionPath=wrapper/dists\r\nzipStoreBase=GRADLE_USER_HOME\r\nzipStorePath=wrapper/dists\r\ndistributionUrl=https\\://services.gradle.org/distributions/gradle-6.5-all.zip\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>windows-1251
===================================================================
--- gradle/wrapper/gradle-wrapper.properties	(revision 882ac4c87be5f612d3758d8cd6cf435da6d9b8be)
+++ gradle/wrapper/gradle-wrapper.properties	(date 1609102700649)
@@ -3,4 +3,4 @@
 distributionPath=wrapper/dists
 zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-6.5-all.zip
+distributionUrl=https://services.gradle.org/distributions/gradle-6.8-rc-1-all.zip
Index: app/release/output-metadata.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/release/output-metadata.json	(date 1607535114000)
+++ app/release/output-metadata.json	(date 1607535114000)
@@ -0,0 +1,18 @@
+{
+  "version": 2,
+  "artifactType": {
+    "type": "APK",
+    "kind": "Directory"
+  },
+  "applicationId": "com.gmail.kaminskysem.PersnalHelper",
+  "variantName": "processReleaseResources",
+  "elements": [
+    {
+      "type": "SINGLE",
+      "filters": [],
+      "versionCode": 1,
+      "versionName": "1.0",
+      "outputFile": "app-release.apk"
+    }
+  ]
+}
\ No newline at end of file
Index: build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>// Top-level build file where you can add configuration options common to all sub-projects/modules.\r\nbuildscript {\r\n    repositories {\r\n        google()\r\n        jcenter()\r\n//        maven {\r\n//            https://jitpack.com\r\n//        }\r\n    }\r\n    dependencies {\r\n        classpath 'com.android.tools.build:gradle:4.1.1'\r\n        classpath 'com.google.gms:google-services:4.3.4'\r\n        classpath 'com.google.firebase:firebase-crashlytics-gradle:2.4.1'\r\n\r\n        // NOTE: Do not place your application dependencies here; they belong\r\n        // in the individual module build.gradle files\r\n    }\r\n}\r\n\r\nallprojects {\r\n    repositories {\r\n        google()\r\n        jcenter()\r\n    }\r\n}\r\n\r\ntask clean(type: Delete) {\r\n    delete rootProject.buildDir\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- build.gradle	(revision 882ac4c87be5f612d3758d8cd6cf435da6d9b8be)
+++ build.gradle	(date 1609102700753)
@@ -8,7 +8,7 @@
 //        }
     }
     dependencies {
-        classpath 'com.android.tools.build:gradle:4.1.1'
+        classpath 'com.android.tools.build:gradle:7.0.0-alpha03'
         classpath 'com.google.gms:google-services:4.3.4'
         classpath 'com.google.firebase:firebase-crashlytics-gradle:2.4.1'
 
